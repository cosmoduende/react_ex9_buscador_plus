{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/Desktop/Curso_React_2021/curso_react/ex7_buscador/src/views/Search/index.js\",\n    _s = $RefreshSig$();\n\n// 3) primero mostrar solo con el puro texto de \"Buscador de personal\" añadido, después proceder a meter inputs\n// añadir lógica js y css classnames hasta después de maquetar\nimport { useState } from \"react\";\nimport SearchBox from \"./components/SearchBox\";\nimport data from \"../../data/users.json\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  const [isAtTop, setIsAtTop] = useState(false);\n  const [userData, setUsersData] = useState(data);\n  const [results, setResults] = useState([]);\n\n  const handleCloseOpenSearch = () => setIsAtTop(!isAtTop);\n\n  const handleSearchClick = searchText => {\n    if (userData === null || userData === void 0 ? void 0 : userData.length) {\n      const filteredData = userData.filter(value => {\n        return value.name.includes(searchText) || value.phone.includes(searchText) || value.email.includes(searchText) || value.username.includes(searchText);\n      });\n      setResults(filteredData);\n    }\n  };\n\n  console.log(results);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `search ${isAtTop ? \"search--top\" : \"search--center\"}`,\n    children: /*#__PURE__*/_jsxDEV(SearchBox, {\n      onSearch: handleSearchClick,\n      onClose: handleCloseOpenSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n} // 4) después de construir este archivo, crear archivo \"SearchBox.js\"\n\n_s(Search, \"wSq/DQ3hFT+TiEMucvsIpLUYMww=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/Alex/Desktop/Curso_React_2021/curso_react/ex7_buscador/src/views/Search/index.js"],"names":["useState","SearchBox","data","Search","isAtTop","setIsAtTop","userData","setUsersData","results","setResults","handleCloseOpenSearch","handleSearchClick","searchText","length","filteredData","filter","value","name","includes","phone","email","username","console","log"],"mappings":";;;AACA;AAEA;AAGA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,OAAO,aAAP;;AAEA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,QAAD,EAAWC,YAAX,IAA2BP,QAAQ,CAACE,IAAD,CAAzC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMU,qBAAqB,GAAG,MAAML,UAAU,CAAC,CAACD,OAAF,CAA9C;;AACA,QAAMO,iBAAiB,GAAIC,UAAD,IAAgB;AACtC,QAAGN,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEO,MAAb,EAAoB;AAChB,YAAMC,YAAY,GAAGR,QAAQ,CAACS,MAAT,CAAiBC,KAAD,IAAW;AAC5C,eACIA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBN,UAApB,KACAI,KAAK,CAACG,KAAN,CAAYD,QAAZ,CAAqBN,UAArB,CADA,IAEAI,KAAK,CAACI,KAAN,CAAYF,QAAZ,CAAqBN,UAArB,CAFA,IAGAI,KAAK,CAACK,QAAN,CAAeH,QAAf,CAAwBN,UAAxB,CAJJ;AAMH,OAPoB,CAArB;AAQAH,MAAAA,UAAU,CAACK,YAAD,CAAV;AACH;AACJ,GAZD;;AAcAQ,EAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,UAASJ,OAAO,GAAG,aAAH,GAAmB,gBAAiB,EAArE;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEO,iBAArB;AAAwC,MAAA,OAAO,EAAED;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,C,CAGD;;GA9BwBP,M;;KAAAA,M","sourcesContent":["\n// 3) primero mostrar solo con el puro texto de \"Buscador de personal\" añadido, después proceder a meter inputs\n\n// añadir lógica js y css classnames hasta después de maquetar\n\n\nimport { useState } from \"react\";\nimport SearchBox from \"./components/SearchBox\";\n\nimport data from \"../../data/users.json\";\n\nimport \"./style.css\"\n\nexport default function Search(){\n    const [isAtTop, setIsAtTop] = useState(false);\n    const [userData, setUsersData] = useState(data);\n    const [results, setResults] = useState([]);\n\n    const handleCloseOpenSearch = () => setIsAtTop(!isAtTop);\n    const handleSearchClick = (searchText) => {\n        if(userData?.length){\n            const filteredData = userData.filter((value) => {\n                return (\n                    value.name.includes(searchText) || \n                    value.phone.includes(searchText) || \n                    value.email.includes(searchText) || \n                    value.username.includes(searchText)\n                )\n            });\n            setResults(filteredData);\n        }\n    };\n  \n    console.log(results);\n\n    return(\n        <div className={`search ${isAtTop ? \"search--top\" : \"search--center\"}`}>\n            <SearchBox onSearch={handleSearchClick} onClose={handleCloseOpenSearch} />\n        </div>\n    );\n}\n\n\n// 4) después de construir este archivo, crear archivo \"SearchBox.js\""]},"metadata":{},"sourceType":"module"}